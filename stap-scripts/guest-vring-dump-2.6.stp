#!/usr/bin/stap -g

global vq_addrs
global vq_last_avail
global vq_last_used

global count = 0

probe module("virtio_ring").function("virtqueue_get_buf").call {
   vr =  &@module_container_of($_vq, "virtio_ring", "struct vring_virtqueue", vq)
   # printf("vr->last_used_idx=%u vr->vring->desc->addr=%u\n", vr->last_used_idx, vr->vring->desc->addr)
   for (i=0; i<count; i++) {
      if (vq_addrs[i] == vr->vring->desc->addr) {
         # printf("Addr found, updating!\n")
         vq_last_avail[i] = vr->vring->avail->idx
         vq_last_used[i] = vr->last_used_idx
         next;
      }
   }
   # printf("Addr not found, adding!\n")
   vq_addrs[count++] = vr->vring->desc->addr
}

probe timer.s(5), end {
   ansi_clear_screen()
   printf("Last update: %s\n\n", ctime(gettimeofday_s()))
   for (i=0; i<count; i++) {
      printf("\tVQ[%d] Addr=%lu last_avail_idx=%u last_used_idx=%u\n", i, vq_addrs[i], vq_last_avail[i], vq_last_used[i])
   }
   delete vq_addrs
   delete vq_last_avail
   delete vq_last_used
   count=0
}

